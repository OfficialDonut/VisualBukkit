{
  "package": "java.util",
  "methods": [
    {
      "name": "getClass",
      "return": "java.lang.Class"
    },
    {
      "name": "hashCode",
      "return": "int"
    },
    {
      "name": "equals",
      "parameters": [{
        "name": "obj",
        "type": "java.lang.Object"
      }],
      "return": "boolean"
    },
    {
      "name": "toString",
      "return": "java.lang.String"
    },
    {"name": "notify"},
    {"name": "notifyAll"},
    {"name": "wait"},
    {
      "name": "wait",
      "parameters": [{
        "name": "timeoutMillis",
        "type": "long"
      }]
    },
    {
      "name": "wait",
      "parameters": [
        {
          "name": "timeoutMillis",
          "type": "long"
        },
        {
          "name": "nanos",
          "type": "int"
        }
      ]
    },
    {
      "name": "estimateSize",
      "return": "long"
    },
    {
      "name": "getExactSizeIfKnown",
      "return": "long"
    },
    {
      "name": "characteristics",
      "return": "int"
    },
    {
      "name": "hasCharacteristics",
      "parameters": [{
        "name": "characteristics",
        "type": "int"
      }],
      "return": "boolean"
    },
    {
      "name": "getComparator",
      "return": "java.util.Comparator"
    },
    {
      "name": "trySplit",
      "return": "java.util.Spliterator.OfLong"
    },
    {
      "name": "tryAdvance",
      "parameters": [{
        "name": "action",
        "type": "java.util.function.LongConsumer"
      }],
      "return": "boolean"
    },
    {
      "name": "forEachRemaining",
      "parameters": [{
        "name": "action",
        "type": "java.util.function.LongConsumer"
      }]
    },
    {
      "name": "tryAdvance",
      "parameters": [{
        "name": "action",
        "type": "java.util.function.Consumer"
      }],
      "return": "boolean"
    },
    {
      "name": "forEachRemaining",
      "parameters": [{
        "name": "action",
        "type": "java.util.function.Consumer"
      }]
    }
  ],
  "name": "java.util.Spliterator.OfLong",
  "simple-name": "OfLong",
  "fields": [
    {
      "static": true,
      "name": "ORDERED",
      "type": "int"
    },
    {
      "static": true,
      "name": "DISTINCT",
      "type": "int"
    },
    {
      "static": true,
      "name": "SORTED",
      "type": "int"
    },
    {
      "static": true,
      "name": "SIZED",
      "type": "int"
    },
    {
      "static": true,
      "name": "NONNULL",
      "type": "int"
    },
    {
      "static": true,
      "name": "IMMUTABLE",
      "type": "int"
    },
    {
      "static": true,
      "name": "CONCURRENT",
      "type": "int"
    },
    {
      "static": true,
      "name": "SUBSIZED",
      "type": "int"
    }
  ]
}