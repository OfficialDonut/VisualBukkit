{
  "constructors": [
    {
      "name": "<init>",
      "parameters": [{
        "name": "initialValue",
        "type": "int"
      }]
    },
    {"name": "<init>"}
  ],
  "package": "java.util.concurrent.atomic",
  "methods": [
    {
      "name": "getClass",
      "return": "java.lang.Class"
    },
    {
      "name": "hashCode",
      "return": "int"
    },
    {
      "name": "equals",
      "parameters": [{
        "name": "obj",
        "type": "java.lang.Object"
      }],
      "return": "boolean"
    },
    {"name": "notify"},
    {"name": "notifyAll"},
    {"name": "wait"},
    {
      "name": "wait",
      "parameters": [{
        "name": "timeoutMillis",
        "type": "long"
      }]
    },
    {
      "name": "wait",
      "parameters": [
        {
          "name": "timeoutMillis",
          "type": "long"
        },
        {
          "name": "nanos",
          "type": "int"
        }
      ]
    },
    {
      "name": "byteValue",
      "return": "byte"
    },
    {
      "name": "shortValue",
      "return": "short"
    },
    {
      "name": "get",
      "return": "int"
    },
    {
      "name": "set",
      "parameters": [{
        "name": "newValue",
        "type": "int"
      }]
    },
    {
      "name": "lazySet",
      "parameters": [{
        "name": "newValue",
        "type": "int"
      }]
    },
    {
      "name": "getAndSet",
      "parameters": [{
        "name": "newValue",
        "type": "int"
      }],
      "return": "int"
    },
    {
      "name": "compareAndSet",
      "parameters": [
        {
          "name": "expectedValue",
          "type": "int"
        },
        {
          "name": "newValue",
          "type": "int"
        }
      ],
      "return": "boolean"
    },
    {
      "name": "weakCompareAndSet",
      "parameters": [
        {
          "name": "expectedValue",
          "type": "int"
        },
        {
          "name": "newValue",
          "type": "int"
        }
      ],
      "return": "boolean"
    },
    {
      "name": "weakCompareAndSetPlain",
      "parameters": [
        {
          "name": "expectedValue",
          "type": "int"
        },
        {
          "name": "newValue",
          "type": "int"
        }
      ],
      "return": "boolean"
    },
    {
      "name": "getAndIncrement",
      "return": "int"
    },
    {
      "name": "getAndDecrement",
      "return": "int"
    },
    {
      "name": "getAndAdd",
      "parameters": [{
        "name": "delta",
        "type": "int"
      }],
      "return": "int"
    },
    {
      "name": "incrementAndGet",
      "return": "int"
    },
    {
      "name": "decrementAndGet",
      "return": "int"
    },
    {
      "name": "addAndGet",
      "parameters": [{
        "name": "delta",
        "type": "int"
      }],
      "return": "int"
    },
    {
      "name": "getAndUpdate",
      "parameters": [{
        "name": "updateFunction",
        "type": "java.util.function.IntUnaryOperator"
      }],
      "return": "int"
    },
    {
      "name": "updateAndGet",
      "parameters": [{
        "name": "updateFunction",
        "type": "java.util.function.IntUnaryOperator"
      }],
      "return": "int"
    },
    {
      "name": "getAndAccumulate",
      "parameters": [
        {
          "name": "x",
          "type": "int"
        },
        {
          "name": "accumulatorFunction",
          "type": "java.util.function.IntBinaryOperator"
        }
      ],
      "return": "int"
    },
    {
      "name": "accumulateAndGet",
      "parameters": [
        {
          "name": "x",
          "type": "int"
        },
        {
          "name": "accumulatorFunction",
          "type": "java.util.function.IntBinaryOperator"
        }
      ],
      "return": "int"
    },
    {
      "name": "toString",
      "return": "java.lang.String"
    },
    {
      "name": "intValue",
      "return": "int"
    },
    {
      "name": "longValue",
      "return": "long"
    },
    {
      "name": "floatValue",
      "return": "float"
    },
    {
      "name": "doubleValue",
      "return": "double"
    },
    {
      "name": "getPlain",
      "return": "int"
    },
    {
      "name": "setPlain",
      "parameters": [{
        "name": "newValue",
        "type": "int"
      }]
    },
    {
      "name": "getOpaque",
      "return": "int"
    },
    {
      "name": "setOpaque",
      "parameters": [{
        "name": "newValue",
        "type": "int"
      }]
    },
    {
      "name": "getAcquire",
      "return": "int"
    },
    {
      "name": "setRelease",
      "parameters": [{
        "name": "newValue",
        "type": "int"
      }]
    },
    {
      "name": "compareAndExchange",
      "parameters": [
        {
          "name": "expectedValue",
          "type": "int"
        },
        {
          "name": "newValue",
          "type": "int"
        }
      ],
      "return": "int"
    },
    {
      "name": "compareAndExchangeAcquire",
      "parameters": [
        {
          "name": "expectedValue",
          "type": "int"
        },
        {
          "name": "newValue",
          "type": "int"
        }
      ],
      "return": "int"
    },
    {
      "name": "compareAndExchangeRelease",
      "parameters": [
        {
          "name": "expectedValue",
          "type": "int"
        },
        {
          "name": "newValue",
          "type": "int"
        }
      ],
      "return": "int"
    },
    {
      "name": "weakCompareAndSetVolatile",
      "parameters": [
        {
          "name": "expectedValue",
          "type": "int"
        },
        {
          "name": "newValue",
          "type": "int"
        }
      ],
      "return": "boolean"
    },
    {
      "name": "weakCompareAndSetAcquire",
      "parameters": [
        {
          "name": "expectedValue",
          "type": "int"
        },
        {
          "name": "newValue",
          "type": "int"
        }
      ],
      "return": "boolean"
    },
    {
      "name": "weakCompareAndSetRelease",
      "parameters": [
        {
          "name": "expectedValue",
          "type": "int"
        },
        {
          "name": "newValue",
          "type": "int"
        }
      ],
      "return": "boolean"
    }
  ],
  "name": "java.util.concurrent.atomic.AtomicInteger",
  "simple-name": "AtomicInteger"
}