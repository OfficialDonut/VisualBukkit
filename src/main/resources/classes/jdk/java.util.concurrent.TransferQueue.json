{
  "package": "java.util.concurrent",
  "methods": [
    {
      "name": "getClass",
      "return": "java.lang.Class"
    },
    {
      "name": "toString",
      "return": "java.lang.String"
    },
    {"name": "notify"},
    {"name": "notifyAll"},
    {"name": "wait"},
    {
      "name": "wait",
      "parameters": [{
        "name": "timeoutMillis",
        "type": "long"
      }]
    },
    {
      "name": "wait",
      "parameters": [
        {
          "name": "timeoutMillis",
          "type": "long"
        },
        {
          "name": "nanos",
          "type": "int"
        }
      ]
    },
    {
      "name": "forEach",
      "parameters": [{
        "name": "action",
        "type": "java.util.function.Consumer"
      }]
    },
    {
      "name": "size",
      "return": "int"
    },
    {
      "name": "isEmpty",
      "return": "boolean"
    },
    {
      "name": "iterator",
      "return": "java.util.Iterator"
    },
    {
      "name": "toArray",
      "return": "java.lang.Object[]"
    },
    {
      "name": "toArray",
      "parameters": [{
        "name": "a",
        "type": "java.lang.Object[]"
      }],
      "return": "java.lang.Object[]"
    },
    {
      "name": "toArray",
      "parameters": [{
        "name": "generator",
        "type": "java.util.function.IntFunction"
      }],
      "return": "java.lang.Object[]"
    },
    {
      "name": "containsAll",
      "parameters": [{
        "name": "c",
        "type": "java.util.Collection"
      }],
      "return": "boolean"
    },
    {
      "name": "addAll",
      "parameters": [{
        "name": "c",
        "type": "java.util.Collection"
      }],
      "return": "boolean"
    },
    {
      "name": "removeAll",
      "parameters": [{
        "name": "c",
        "type": "java.util.Collection"
      }],
      "return": "boolean"
    },
    {
      "name": "removeIf",
      "parameters": [{
        "name": "filter",
        "type": "java.util.function.Predicate"
      }],
      "return": "boolean"
    },
    {
      "name": "retainAll",
      "parameters": [{
        "name": "c",
        "type": "java.util.Collection"
      }],
      "return": "boolean"
    },
    {"name": "clear"},
    {
      "name": "equals",
      "parameters": [{
        "name": "o",
        "type": "java.lang.Object"
      }],
      "return": "boolean"
    },
    {
      "name": "hashCode",
      "return": "int"
    },
    {
      "name": "spliterator",
      "return": "java.util.Spliterator"
    },
    {
      "name": "stream",
      "return": "java.util.stream.Stream"
    },
    {
      "name": "parallelStream",
      "return": "java.util.stream.Stream"
    },
    {
      "name": "remove",
      "return": "java.lang.Object"
    },
    {
      "name": "poll",
      "return": "java.lang.Object"
    },
    {
      "name": "element",
      "return": "java.lang.Object"
    },
    {
      "name": "peek",
      "return": "java.lang.Object"
    },
    {
      "name": "add",
      "parameters": [{
        "name": "e",
        "type": "java.lang.Object"
      }],
      "return": "boolean"
    },
    {
      "name": "offer",
      "parameters": [{
        "name": "e",
        "type": "java.lang.Object"
      }],
      "return": "boolean"
    },
    {
      "name": "put",
      "parameters": [{
        "name": "e",
        "type": "java.lang.Object"
      }]
    },
    {
      "name": "offer",
      "parameters": [
        {
          "name": "e",
          "type": "java.lang.Object"
        },
        {
          "name": "timeout",
          "type": "long"
        },
        {
          "name": "unit",
          "type": "java.util.concurrent.TimeUnit"
        }
      ],
      "return": "boolean"
    },
    {
      "name": "take",
      "return": "java.lang.Object"
    },
    {
      "name": "poll",
      "parameters": [
        {
          "name": "timeout",
          "type": "long"
        },
        {
          "name": "unit",
          "type": "java.util.concurrent.TimeUnit"
        }
      ],
      "return": "java.lang.Object"
    },
    {
      "name": "remainingCapacity",
      "return": "int"
    },
    {
      "name": "remove",
      "parameters": [{
        "name": "o",
        "type": "java.lang.Object"
      }],
      "return": "boolean"
    },
    {
      "name": "contains",
      "parameters": [{
        "name": "o",
        "type": "java.lang.Object"
      }],
      "return": "boolean"
    },
    {
      "name": "drainTo",
      "parameters": [{
        "name": "c",
        "type": "java.util.Collection"
      }],
      "return": "int"
    },
    {
      "name": "drainTo",
      "parameters": [
        {
          "name": "c",
          "type": "java.util.Collection"
        },
        {
          "name": "maxElements",
          "type": "int"
        }
      ],
      "return": "int"
    },
    {
      "name": "tryTransfer",
      "parameters": [{
        "name": "e",
        "type": "java.lang.Object"
      }],
      "return": "boolean"
    },
    {
      "name": "transfer",
      "parameters": [{
        "name": "e",
        "type": "java.lang.Object"
      }]
    },
    {
      "name": "tryTransfer",
      "parameters": [
        {
          "name": "e",
          "type": "java.lang.Object"
        },
        {
          "name": "timeout",
          "type": "long"
        },
        {
          "name": "unit",
          "type": "java.util.concurrent.TimeUnit"
        }
      ],
      "return": "boolean"
    },
    {
      "name": "hasWaitingConsumer",
      "return": "boolean"
    },
    {
      "name": "getWaitingConsumerCount",
      "return": "int"
    }
  ],
  "name": "java.util.concurrent.TransferQueue",
  "simple-name": "TransferQueue"
}