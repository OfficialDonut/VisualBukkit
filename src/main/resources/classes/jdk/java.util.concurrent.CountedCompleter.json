{
  "package": "java.util.concurrent",
  "methods": [
    {
      "name": "getClass",
      "return": "java.lang.Class"
    },
    {
      "name": "hashCode",
      "return": "int"
    },
    {
      "name": "equals",
      "parameters": [{
        "name": "obj",
        "type": "java.lang.Object"
      }],
      "return": "boolean"
    },
    {
      "name": "toString",
      "return": "java.lang.String"
    },
    {"name": "notify"},
    {"name": "notifyAll"},
    {"name": "wait"},
    {
      "name": "wait",
      "parameters": [{
        "name": "timeoutMillis",
        "type": "long"
      }]
    },
    {
      "name": "wait",
      "parameters": [
        {
          "name": "timeoutMillis",
          "type": "long"
        },
        {
          "name": "nanos",
          "type": "int"
        }
      ]
    },
    {
      "name": "fork",
      "return": "java.util.concurrent.ForkJoinTask"
    },
    {
      "name": "join",
      "return": "java.lang.Object"
    },
    {
      "name": "invoke",
      "return": "java.lang.Object"
    },
    {
      "static": true,
      "name": "invokeAll",
      "parameters": [
        {
          "name": "t1",
          "type": "java.util.concurrent.ForkJoinTask"
        },
        {
          "name": "t2",
          "type": "java.util.concurrent.ForkJoinTask"
        }
      ]
    },
    {
      "static": true,
      "name": "invokeAll",
      "parameters": [{
        "name": "tasks",
        "type": "java.util.concurrent.ForkJoinTask[]"
      }]
    },
    {
      "static": true,
      "name": "invokeAll",
      "parameters": [{
        "name": "tasks",
        "type": "java.util.Collection"
      }],
      "return": "java.util.Collection"
    },
    {
      "name": "cancel",
      "parameters": [{
        "name": "mayInterruptIfRunning",
        "type": "boolean"
      }],
      "return": "boolean"
    },
    {
      "name": "isDone",
      "return": "boolean"
    },
    {
      "name": "isCancelled",
      "return": "boolean"
    },
    {
      "name": "isCompletedAbnormally",
      "return": "boolean"
    },
    {
      "name": "isCompletedNormally",
      "return": "boolean"
    },
    {
      "name": "getException",
      "return": "java.lang.Throwable"
    },
    {
      "name": "completeExceptionally",
      "parameters": [{
        "name": "ex",
        "type": "java.lang.Throwable"
      }]
    },
    {"name": "quietlyComplete"},
    {
      "name": "get",
      "return": "java.lang.Object"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "timeout",
          "type": "long"
        },
        {
          "name": "unit",
          "type": "java.util.concurrent.TimeUnit"
        }
      ],
      "return": "java.lang.Object"
    },
    {"name": "quietlyJoin"},
    {"name": "quietlyInvoke"},
    {
      "static": true,
      "name": "helpQuiesce"
    },
    {"name": "reinitialize"},
    {
      "static": true,
      "name": "getPool",
      "return": "java.util.concurrent.ForkJoinPool"
    },
    {
      "static": true,
      "name": "inForkJoinPool",
      "return": "boolean"
    },
    {
      "name": "tryUnfork",
      "return": "boolean"
    },
    {
      "static": true,
      "name": "getQueuedTaskCount",
      "return": "int"
    },
    {
      "static": true,
      "name": "getSurplusQueuedTaskCount",
      "return": "int"
    },
    {
      "name": "getForkJoinTaskTag",
      "return": "short"
    },
    {
      "name": "setForkJoinTaskTag",
      "parameters": [{
        "name": "newValue",
        "type": "short"
      }],
      "return": "short"
    },
    {
      "name": "compareAndSetForkJoinTaskTag",
      "parameters": [
        {
          "name": "expect",
          "type": "short"
        },
        {
          "name": "update",
          "type": "short"
        }
      ],
      "return": "boolean"
    },
    {
      "static": true,
      "name": "adapt",
      "parameters": [{
        "name": "runnable",
        "type": "java.lang.Runnable"
      }],
      "return": "java.util.concurrent.ForkJoinTask"
    },
    {
      "static": true,
      "name": "adapt",
      "parameters": [
        {
          "name": "runnable",
          "type": "java.lang.Runnable"
        },
        {
          "name": "result",
          "type": "java.lang.Object"
        }
      ],
      "return": "java.util.concurrent.ForkJoinTask"
    },
    {
      "static": true,
      "name": "adapt",
      "parameters": [{
        "name": "callable",
        "type": "java.util.concurrent.Callable"
      }],
      "return": "java.util.concurrent.ForkJoinTask"
    },
    {"name": "compute"},
    {
      "name": "onCompletion",
      "parameters": [{
        "name": "caller",
        "type": "java.util.concurrent.CountedCompleter"
      }]
    },
    {
      "name": "onExceptionalCompletion",
      "parameters": [
        {
          "name": "ex",
          "type": "java.lang.Throwable"
        },
        {
          "name": "caller",
          "type": "java.util.concurrent.CountedCompleter"
        }
      ],
      "return": "boolean"
    },
    {
      "name": "getCompleter",
      "return": "java.util.concurrent.CountedCompleter"
    },
    {
      "name": "getPendingCount",
      "return": "int"
    },
    {
      "name": "setPendingCount",
      "parameters": [{
        "name": "count",
        "type": "int"
      }]
    },
    {
      "name": "addToPendingCount",
      "parameters": [{
        "name": "delta",
        "type": "int"
      }]
    },
    {
      "name": "compareAndSetPendingCount",
      "parameters": [
        {
          "name": "expected",
          "type": "int"
        },
        {
          "name": "count",
          "type": "int"
        }
      ],
      "return": "boolean"
    },
    {
      "name": "decrementPendingCountUnlessZero",
      "return": "int"
    },
    {
      "name": "getRoot",
      "return": "java.util.concurrent.CountedCompleter"
    },
    {"name": "tryComplete"},
    {"name": "propagateCompletion"},
    {
      "name": "complete",
      "parameters": [{
        "name": "rawResult",
        "type": "java.lang.Object"
      }]
    },
    {
      "name": "firstComplete",
      "return": "java.util.concurrent.CountedCompleter"
    },
    {
      "name": "nextComplete",
      "return": "java.util.concurrent.CountedCompleter"
    },
    {"name": "quietlyCompleteRoot"},
    {
      "name": "helpComplete",
      "parameters": [{
        "name": "maxTasks",
        "type": "int"
      }]
    },
    {
      "name": "getRawResult",
      "return": "java.lang.Object"
    }
  ],
  "name": "java.util.concurrent.CountedCompleter",
  "simple-name": "CountedCompleter"
}