package discord_game_sdk;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : discord_game_sdk.h:362</i><br>
 * This file was autogenerated by <a href="https://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="https://ochafik.com/">Olivier Chafik</a> that <a href="https://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="https://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="https://rococoa.dev.java.net/">Rococoa</a>, or <a href="https://jna.dev.java.net/">JNA</a>.
 */
public class DiscordUserAchievement extends Structure {
	/** C type : DiscordSnowflake */
	public long user_id;
	/** C type : DiscordSnowflake */
	public long achievement_id;
	public byte percent_complete;
	/** C type : DiscordDateTime */
	public byte[] unlocked_at = new byte[64];
	public DiscordUserAchievement() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("user_id", "achievement_id", "percent_complete", "unlocked_at");
	}
	/**
	 * @param user_id C type : DiscordSnowflake<br>
	 * @param achievement_id C type : DiscordSnowflake<br>
	 * @param unlocked_at C type : DiscordDateTime
	 */
	public DiscordUserAchievement(long user_id, long achievement_id, byte percent_complete, byte unlocked_at[]) {
		super();
		this.user_id = user_id;
		this.achievement_id = achievement_id;
		this.percent_complete = percent_complete;
		if ((unlocked_at.length != this.unlocked_at.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.unlocked_at = unlocked_at;
	}
	public DiscordUserAchievement(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends DiscordUserAchievement implements Structure.ByReference {
		
	};
	public static class ByValue extends DiscordUserAchievement implements Structure.ByValue {
		
	};
}
