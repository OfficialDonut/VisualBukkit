package discord_game_sdk;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : discord_game_sdk.h:272</i><br>
 * This file was autogenerated by <a href="https://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="https://ochafik.com/">Olivier Chafik</a> that <a href="https://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="https://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="https://rococoa.dev.java.net/">Rococoa</a>, or <a href="https://jna.dev.java.net/">JNA</a>.
 */
public class DiscordActivityParty extends Structure {
	/** C type : char[128] */
	public byte[] id = new byte[128];
	/** C type : DiscordPartySize */
	public DiscordPartySize size;
	/**
	 * @see EDiscordActivityPartyPrivacy<br>
	 * C type : EDiscordActivityPartyPrivacy
	 */
	public int privacy;
	public DiscordActivityParty() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("id", "size", "privacy");
	}
	/**
	 * @param id C type : char[128]<br>
	 * @param size C type : DiscordPartySize<br>
	 * @param privacy @see EDiscordActivityPartyPrivacy<br>
	 * C type : EDiscordActivityPartyPrivacy
	 */
	public DiscordActivityParty(byte id[], DiscordPartySize size, int privacy) {
		super();
		if ((id.length != this.id.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.id = id;
		this.size = size;
		this.privacy = privacy;
	}
	public DiscordActivityParty(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends DiscordActivityParty implements Structure.ByReference {
		
	};
	public static class ByValue extends DiscordActivityParty implements Structure.ByValue {
		
	};
}
