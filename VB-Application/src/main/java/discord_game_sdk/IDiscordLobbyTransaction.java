package discord_game_sdk;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : discord_game_sdk.h:369</i><br>
 * This file was autogenerated by <a href="https://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="https://ochafik.com/">Olivier Chafik</a> that <a href="https://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="https://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="https://rococoa.dev.java.net/">Rococoa</a>, or <a href="https://jna.dev.java.net/">JNA</a>.
 */
public class IDiscordLobbyTransaction extends Structure {
	/** C type : set_type_callback* */
	public IDiscordLobbyTransaction.set_type_callback set_type;
	/** C type : set_owner_callback* */
	public IDiscordLobbyTransaction.set_owner_callback set_owner;
	/** C type : set_capacity_callback* */
	public IDiscordLobbyTransaction.set_capacity_callback set_capacity;
	/** C type : set_metadata_callback* */
	public discord_game_sdk.IDiscordLobbyMemberTransaction.set_metadata_callback set_metadata;
	/** C type : delete_metadata_callback* */
	public discord_game_sdk.IDiscordLobbyMemberTransaction.delete_metadata_callback delete_metadata;
	/** C type : set_locked_callback* */
	public discord_game_sdk.IDiscordOverlayManager.set_locked_callback set_locked;
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface set_type_callback extends Callback {
		int apply(IDiscordLobbyTransaction lobby_transaction, int type);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface set_owner_callback extends Callback {
		int apply(IDiscordLobbyTransaction lobby_transaction, long owner_id);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface set_capacity_callback extends Callback {
		int apply(IDiscordLobbyTransaction lobby_transaction, int capacity);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface set_metadata_callback extends Callback {
		int apply(IDiscordLobbyTransaction lobby_transaction, Pointer key, Pointer value);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface delete_metadata_callback extends Callback {
		int apply(IDiscordLobbyTransaction lobby_transaction, Pointer key);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface set_locked_callback extends Callback {
		int apply(IDiscordLobbyTransaction lobby_transaction, byte locked);
	};
	public IDiscordLobbyTransaction() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("set_type", "set_owner", "set_capacity", "set_metadata", "delete_metadata", "set_locked");
	}
	/**
	 * @param set_type C type : set_type_callback*<br>
	 * @param set_owner C type : set_owner_callback*<br>
	 * @param set_capacity C type : set_capacity_callback*<br>
	 * @param set_metadata C type : set_metadata_callback*<br>
	 * @param delete_metadata C type : delete_metadata_callback*<br>
	 * @param set_locked C type : set_locked_callback*
	 */
	public IDiscordLobbyTransaction(IDiscordLobbyTransaction.set_type_callback set_type, IDiscordLobbyTransaction.set_owner_callback set_owner, IDiscordLobbyTransaction.set_capacity_callback set_capacity, discord_game_sdk.IDiscordLobbyMemberTransaction.set_metadata_callback set_metadata, discord_game_sdk.IDiscordLobbyMemberTransaction.delete_metadata_callback delete_metadata, discord_game_sdk.IDiscordOverlayManager.set_locked_callback set_locked) {
		super();
		this.set_type = set_type;
		this.set_owner = set_owner;
		this.set_capacity = set_capacity;
		this.set_metadata = set_metadata;
		this.delete_metadata = delete_metadata;
		this.set_locked = set_locked;
	}
	public IDiscordLobbyTransaction(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends IDiscordLobbyTransaction implements Structure.ByReference {
		
	};
	public static class ByValue extends IDiscordLobbyTransaction implements Structure.ByValue {
		
	};
}
