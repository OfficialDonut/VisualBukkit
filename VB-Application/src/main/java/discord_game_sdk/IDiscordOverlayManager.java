package discord_game_sdk;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.win32.StdCallLibrary.StdCallCallback;
import discord_game_sdk.Discord_game_sdkLibrary.IDXGISwapChain;
import discord_game_sdk.Discord_game_sdkLibrary.MSG;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : discord_game_sdk.h:539</i><br>
 * This file was autogenerated by <a href="https://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="https://ochafik.com/">Olivier Chafik</a> that <a href="https://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="https://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="https://rococoa.dev.java.net/">Rococoa</a>, or <a href="https://jna.dev.java.net/">JNA</a>.
 */
public class IDiscordOverlayManager extends Structure {
	/** C type : is_enabled_callback* */
	public IDiscordOverlayManager.is_enabled_callback is_enabled;
	/** C type : is_locked_callback* */
	public IDiscordOverlayManager.is_locked_callback is_locked;
	/** C type : set_locked_callback* */
	public IDiscordOverlayManager.set_locked_callback set_locked;
	/** C type : open_activity_invite_callback* */
	public IDiscordOverlayManager.open_activity_invite_callback open_activity_invite;
	/** C type : open_guild_invite_callback* */
	public IDiscordOverlayManager.open_guild_invite_callback open_guild_invite;
	/** C type : open_voice_settings_callback* */
	public IDiscordOverlayManager.open_voice_settings_callback open_voice_settings;
	/** C type : init_drawing_dxgi_callback* */
	public IDiscordOverlayManager.init_drawing_dxgi_callback init_drawing_dxgi;
	/** C type : on_present_callback* */
	public IDiscordOverlayManager.on_present_callback on_present;
	/** C type : forward_message_callback* */
	public IDiscordOverlayManager.forward_message_callback forward_message;
	/** C type : key_event_callback* */
	public IDiscordOverlayManager.key_event_callback key_event;
	/** C type : char_event_callback* */
	public IDiscordOverlayManager.char_event_callback char_event;
	/** C type : mouse_button_event_callback* */
	public IDiscordOverlayManager.mouse_button_event_callback mouse_button_event;
	/** C type : mouse_motion_event_callback* */
	public IDiscordOverlayManager.mouse_motion_event_callback mouse_motion_event;
	/** C type : ime_commit_text_callback* */
	public IDiscordOverlayManager.ime_commit_text_callback ime_commit_text;
	/** C type : ime_set_composition_callback* */
	public IDiscordOverlayManager.ime_set_composition_callback ime_set_composition;
	/** C type : ime_cancel_composition_callback* */
	public IDiscordOverlayManager.ime_cancel_composition_callback ime_cancel_composition;
	/** C type : set_ime_composition_range_callback_callback* */
	public IDiscordOverlayManager.set_ime_composition_range_callback_callback set_ime_composition_range_callback;
	/** C type : set_ime_selection_bounds_callback_callback* */
	public IDiscordOverlayManager.set_ime_selection_bounds_callback_callback set_ime_selection_bounds_callback;
	/** C type : is_point_inside_click_zone_callback* */
	public IDiscordOverlayManager.is_point_inside_click_zone_callback is_point_inside_click_zone;
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface is_enabled_callback extends Callback {
		void apply(IDiscordOverlayManager manager, Pointer enabled);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface is_locked_callback extends Callback {
		void apply(IDiscordOverlayManager manager, Pointer locked);
	};
	/** <i>native declaration : discord_game_sdk.h:542</i> */
	public interface set_locked_callback_callback_callback extends Callback {
		void apply(Pointer callback_data, int result);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface set_locked_callback extends Callback {
		void apply(IDiscordOverlayManager manager, byte locked, Pointer callback_data, IDiscordOverlayManager.set_locked_callback_callback_callback callback);
	};
	/** <i>native declaration : discord_game_sdk.h:543</i> */
	public interface open_activity_invite_callback_callback_callback extends Callback {
		void apply(Pointer callback_data, int result);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface open_activity_invite_callback extends Callback {
		void apply(IDiscordOverlayManager manager, int type, Pointer callback_data, IDiscordOverlayManager.open_activity_invite_callback_callback_callback callback);
	};
	/** <i>native declaration : discord_game_sdk.h:544</i> */
	public interface open_guild_invite_callback_callback_callback extends Callback {
		void apply(Pointer callback_data, int result);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface open_guild_invite_callback extends Callback {
		void apply(IDiscordOverlayManager manager, Pointer code, Pointer callback_data, IDiscordOverlayManager.open_guild_invite_callback_callback_callback callback);
	};
	/** <i>native declaration : discord_game_sdk.h:545</i> */
	public interface open_voice_settings_callback_callback_callback extends Callback {
		void apply(Pointer callback_data, int result);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface open_voice_settings_callback extends Callback {
		void apply(IDiscordOverlayManager manager, Pointer callback_data, IDiscordOverlayManager.open_voice_settings_callback_callback_callback callback);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface init_drawing_dxgi_callback extends Callback {
		int apply(IDiscordOverlayManager manager, IDXGISwapChain swapchain, byte use_message_forwarding);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface on_present_callback extends Callback {
		void apply(IDiscordOverlayManager manager);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface forward_message_callback extends Callback {
		void apply(IDiscordOverlayManager manager, MSG message);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface key_event_callback extends Callback {
		void apply(IDiscordOverlayManager manager, byte down, Pointer key_code, int variant);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface char_event_callback extends Callback {
		void apply(IDiscordOverlayManager manager, Pointer character);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface mouse_button_event_callback extends Callback {
		void apply(IDiscordOverlayManager manager, byte down, int click_count, int which, int x, int y);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface mouse_motion_event_callback extends Callback {
		void apply(IDiscordOverlayManager manager, int x, int y);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface ime_commit_text_callback extends Callback {
		void apply(IDiscordOverlayManager manager, Pointer text);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface ime_set_composition_callback extends Callback {
		void apply(IDiscordOverlayManager manager, Pointer text, DiscordImeUnderline underlines, int underlines_length, int from, int to);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface ime_cancel_composition_callback extends Callback {
		void apply(IDiscordOverlayManager manager);
	};
	/** <i>native declaration : discord_game_sdk.h:556</i> */
	public interface set_ime_composition_range_callback_callback_on_ime_composition_range_changed_callback extends Callback {
		void apply(Pointer on_ime_composition_range_changed_data, int from, int to, DiscordRect bounds, int bounds_length);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface set_ime_composition_range_callback_callback extends Callback {
		void apply(IDiscordOverlayManager manager, Pointer on_ime_composition_range_changed_data, IDiscordOverlayManager.set_ime_composition_range_callback_callback_on_ime_composition_range_changed_callback on_ime_composition_range_changed);
	};
	/** <i>native declaration : discord_game_sdk.h:557</i> */
	public interface set_ime_selection_bounds_callback_callback_on_ime_selection_bounds_changed_callback extends Callback {
		void apply(Pointer on_ime_selection_bounds_changed_data, DiscordRect.ByValue anchor, DiscordRect.ByValue focus, byte is_anchor_first);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface set_ime_selection_bounds_callback_callback extends Callback {
		void apply(IDiscordOverlayManager manager, Pointer on_ime_selection_bounds_changed_data, IDiscordOverlayManager.set_ime_selection_bounds_callback_callback_on_ime_selection_bounds_changed_callback on_ime_selection_bounds_changed);
	};
	/** <i>native declaration : discord_game_sdk.h</i> */
	public interface is_point_inside_click_zone_callback extends Callback {
		byte apply(IDiscordOverlayManager manager, int x, int y);
	};
	public IDiscordOverlayManager() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("is_enabled", "is_locked", "set_locked", "open_activity_invite", "open_guild_invite", "open_voice_settings", "init_drawing_dxgi", "on_present", "forward_message", "key_event", "char_event", "mouse_button_event", "mouse_motion_event", "ime_commit_text", "ime_set_composition", "ime_cancel_composition", "set_ime_composition_range_callback", "set_ime_selection_bounds_callback", "is_point_inside_click_zone");
	}
	public IDiscordOverlayManager(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends IDiscordOverlayManager implements Structure.ByReference {
		
	};
	public static class ByValue extends IDiscordOverlayManager implements Structure.ByValue {
		
	};
}
