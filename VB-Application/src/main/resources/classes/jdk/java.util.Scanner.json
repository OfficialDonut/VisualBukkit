{
  "constructors": [
    {
      "name": "<init>",
      "parameters": [{
        "name": "source",
        "type": "java.lang.Readable"
      }]
    },
    {
      "name": "<init>",
      "parameters": [{
        "name": "source",
        "type": "java.io.InputStream"
      }]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "source",
          "type": "java.io.InputStream"
        },
        {
          "name": "charsetName",
          "type": "java.lang.String"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "source",
          "type": "java.io.InputStream"
        },
        {
          "name": "charset",
          "type": "java.nio.charset.Charset"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [{
        "name": "source",
        "type": "java.io.File"
      }]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "source",
          "type": "java.io.File"
        },
        {
          "name": "charsetName",
          "type": "java.lang.String"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "source",
          "type": "java.io.File"
        },
        {
          "name": "charset",
          "type": "java.nio.charset.Charset"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [{
        "name": "source",
        "type": "java.nio.file.Path"
      }]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "source",
          "type": "java.nio.file.Path"
        },
        {
          "name": "charsetName",
          "type": "java.lang.String"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "source",
          "type": "java.nio.file.Path"
        },
        {
          "name": "charset",
          "type": "java.nio.charset.Charset"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [{
        "name": "source",
        "type": "java.lang.String"
      }]
    },
    {
      "name": "<init>",
      "parameters": [{
        "name": "source",
        "type": "java.nio.channels.ReadableByteChannel"
      }]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "source",
          "type": "java.nio.channels.ReadableByteChannel"
        },
        {
          "name": "charsetName",
          "type": "java.lang.String"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "source",
          "type": "java.nio.channels.ReadableByteChannel"
        },
        {
          "name": "charset",
          "type": "java.nio.charset.Charset"
        }
      ]
    }
  ],
  "package": "java.util",
  "methods": [
    {
      "name": "getClass",
      "return": "java.lang.Class"
    },
    {
      "name": "hashCode",
      "return": "int"
    },
    {
      "name": "equals",
      "parameters": [{
        "name": "obj",
        "type": "java.lang.Object"
      }],
      "return": "boolean"
    },
    {"name": "notify"},
    {"name": "notifyAll"},
    {"name": "wait"},
    {
      "name": "wait",
      "parameters": [{
        "name": "timeoutMillis",
        "type": "long"
      }]
    },
    {
      "name": "wait",
      "parameters": [
        {
          "name": "timeoutMillis",
          "type": "long"
        },
        {
          "name": "nanos",
          "type": "int"
        }
      ]
    },
    {
      "name": "forEachRemaining",
      "parameters": [{
        "name": "action",
        "type": "java.util.function.Consumer"
      }]
    },
    {"name": "close"},
    {
      "name": "ioException",
      "return": "java.io.IOException"
    },
    {
      "name": "delimiter",
      "return": "java.util.regex.Pattern"
    },
    {
      "name": "useDelimiter",
      "parameters": [{
        "name": "pattern",
        "type": "java.util.regex.Pattern"
      }],
      "return": "java.util.Scanner"
    },
    {
      "name": "useDelimiter",
      "parameters": [{
        "name": "pattern",
        "type": "java.lang.String"
      }],
      "return": "java.util.Scanner"
    },
    {
      "name": "locale",
      "return": "java.util.Locale"
    },
    {
      "name": "useLocale",
      "parameters": [{
        "name": "locale",
        "type": "java.util.Locale"
      }],
      "return": "java.util.Scanner"
    },
    {
      "name": "radix",
      "return": "int"
    },
    {
      "name": "useRadix",
      "parameters": [{
        "name": "radix",
        "type": "int"
      }],
      "return": "java.util.Scanner"
    },
    {
      "name": "match",
      "return": "java.util.regex.MatchResult"
    },
    {
      "name": "toString",
      "return": "java.lang.String"
    },
    {
      "name": "hasNext",
      "return": "boolean"
    },
    {
      "name": "next",
      "return": "java.lang.String"
    },
    {"name": "remove"},
    {
      "name": "hasNext",
      "parameters": [{
        "name": "pattern",
        "type": "java.lang.String"
      }],
      "return": "boolean"
    },
    {
      "name": "next",
      "parameters": [{
        "name": "pattern",
        "type": "java.lang.String"
      }],
      "return": "java.lang.String"
    },
    {
      "name": "hasNext",
      "parameters": [{
        "name": "pattern",
        "type": "java.util.regex.Pattern"
      }],
      "return": "boolean"
    },
    {
      "name": "next",
      "parameters": [{
        "name": "pattern",
        "type": "java.util.regex.Pattern"
      }],
      "return": "java.lang.String"
    },
    {
      "name": "hasNextLine",
      "return": "boolean"
    },
    {
      "name": "nextLine",
      "return": "java.lang.String"
    },
    {
      "name": "findInLine",
      "parameters": [{
        "name": "pattern",
        "type": "java.lang.String"
      }],
      "return": "java.lang.String"
    },
    {
      "name": "findInLine",
      "parameters": [{
        "name": "pattern",
        "type": "java.util.regex.Pattern"
      }],
      "return": "java.lang.String"
    },
    {
      "name": "findWithinHorizon",
      "parameters": [
        {
          "name": "pattern",
          "type": "java.lang.String"
        },
        {
          "name": "horizon",
          "type": "int"
        }
      ],
      "return": "java.lang.String"
    },
    {
      "name": "findWithinHorizon",
      "parameters": [
        {
          "name": "pattern",
          "type": "java.util.regex.Pattern"
        },
        {
          "name": "horizon",
          "type": "int"
        }
      ],
      "return": "java.lang.String"
    },
    {
      "name": "skip",
      "parameters": [{
        "name": "pattern",
        "type": "java.util.regex.Pattern"
      }],
      "return": "java.util.Scanner"
    },
    {
      "name": "skip",
      "parameters": [{
        "name": "pattern",
        "type": "java.lang.String"
      }],
      "return": "java.util.Scanner"
    },
    {
      "name": "hasNextBoolean",
      "return": "boolean"
    },
    {
      "name": "nextBoolean",
      "return": "boolean"
    },
    {
      "name": "hasNextByte",
      "return": "boolean"
    },
    {
      "name": "hasNextByte",
      "parameters": [{
        "name": "radix",
        "type": "int"
      }],
      "return": "boolean"
    },
    {
      "name": "nextByte",
      "return": "byte"
    },
    {
      "name": "nextByte",
      "parameters": [{
        "name": "radix",
        "type": "int"
      }],
      "return": "byte"
    },
    {
      "name": "hasNextShort",
      "return": "boolean"
    },
    {
      "name": "hasNextShort",
      "parameters": [{
        "name": "radix",
        "type": "int"
      }],
      "return": "boolean"
    },
    {
      "name": "nextShort",
      "return": "short"
    },
    {
      "name": "nextShort",
      "parameters": [{
        "name": "radix",
        "type": "int"
      }],
      "return": "short"
    },
    {
      "name": "hasNextInt",
      "return": "boolean"
    },
    {
      "name": "hasNextInt",
      "parameters": [{
        "name": "radix",
        "type": "int"
      }],
      "return": "boolean"
    },
    {
      "name": "nextInt",
      "return": "int"
    },
    {
      "name": "nextInt",
      "parameters": [{
        "name": "radix",
        "type": "int"
      }],
      "return": "int"
    },
    {
      "name": "hasNextLong",
      "return": "boolean"
    },
    {
      "name": "hasNextLong",
      "parameters": [{
        "name": "radix",
        "type": "int"
      }],
      "return": "boolean"
    },
    {
      "name": "nextLong",
      "return": "long"
    },
    {
      "name": "nextLong",
      "parameters": [{
        "name": "radix",
        "type": "int"
      }],
      "return": "long"
    },
    {
      "name": "hasNextFloat",
      "return": "boolean"
    },
    {
      "name": "nextFloat",
      "return": "float"
    },
    {
      "name": "hasNextDouble",
      "return": "boolean"
    },
    {
      "name": "nextDouble",
      "return": "double"
    },
    {
      "name": "hasNextBigInteger",
      "return": "boolean"
    },
    {
      "name": "hasNextBigInteger",
      "parameters": [{
        "name": "radix",
        "type": "int"
      }],
      "return": "boolean"
    },
    {
      "name": "nextBigInteger",
      "return": "java.math.BigInteger"
    },
    {
      "name": "nextBigInteger",
      "parameters": [{
        "name": "radix",
        "type": "int"
      }],
      "return": "java.math.BigInteger"
    },
    {
      "name": "hasNextBigDecimal",
      "return": "boolean"
    },
    {
      "name": "nextBigDecimal",
      "return": "java.math.BigDecimal"
    },
    {
      "name": "reset",
      "return": "java.util.Scanner"
    },
    {
      "name": "tokens",
      "return": "java.util.stream.Stream"
    },
    {
      "name": "findAll",
      "parameters": [{
        "name": "pattern",
        "type": "java.util.regex.Pattern"
      }],
      "return": "java.util.stream.Stream"
    },
    {
      "name": "findAll",
      "parameters": [{
        "name": "patString",
        "type": "java.lang.String"
      }],
      "return": "java.util.stream.Stream"
    }
  ],
  "name": "java.util.Scanner",
  "simple-name": "Scanner"
}