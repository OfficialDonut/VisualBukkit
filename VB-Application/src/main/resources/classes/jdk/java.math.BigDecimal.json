{
  "constructors": [
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "in",
          "type": "char[]"
        },
        {
          "name": "offset",
          "type": "int"
        },
        {
          "name": "len",
          "type": "int"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "in",
          "type": "char[]"
        },
        {
          "name": "offset",
          "type": "int"
        },
        {
          "name": "len",
          "type": "int"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [{
        "name": "in",
        "type": "char[]"
      }]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "in",
          "type": "char[]"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [{
        "name": "val",
        "type": "java.lang.String"
      }]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "val",
          "type": "java.lang.String"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [{
        "name": "val",
        "type": "double"
      }]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "val",
          "type": "double"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [{
        "name": "val",
        "type": "java.math.BigInteger"
      }]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "val",
          "type": "java.math.BigInteger"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "unscaledVal",
          "type": "java.math.BigInteger"
        },
        {
          "name": "scale",
          "type": "int"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "unscaledVal",
          "type": "java.math.BigInteger"
        },
        {
          "name": "scale",
          "type": "int"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [{
        "name": "val",
        "type": "int"
      }]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "val",
          "type": "int"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [{
        "name": "val",
        "type": "long"
      }]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "val",
          "type": "long"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ]
    }
  ],
  "package": "java.math",
  "methods": [
    {
      "name": "getClass",
      "return": "java.lang.Class"
    },
    {"name": "notify"},
    {"name": "notifyAll"},
    {"name": "wait"},
    {
      "name": "wait",
      "parameters": [{
        "name": "timeoutMillis",
        "type": "long"
      }]
    },
    {
      "name": "wait",
      "parameters": [
        {
          "name": "timeoutMillis",
          "type": "long"
        },
        {
          "name": "nanos",
          "type": "int"
        }
      ]
    },
    {
      "name": "byteValue",
      "return": "byte"
    },
    {
      "name": "shortValue",
      "return": "short"
    },
    {
      "static": true,
      "name": "valueOf",
      "parameters": [
        {
          "name": "unscaledVal",
          "type": "long"
        },
        {
          "name": "scale",
          "type": "int"
        }
      ],
      "return": "java.math.BigDecimal"
    },
    {
      "static": true,
      "name": "valueOf",
      "parameters": [{
        "name": "val",
        "type": "long"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "static": true,
      "name": "valueOf",
      "parameters": [{
        "name": "val",
        "type": "double"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "add",
      "parameters": [{
        "name": "augend",
        "type": "java.math.BigDecimal"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "add",
      "parameters": [
        {
          "name": "augend",
          "type": "java.math.BigDecimal"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "subtract",
      "parameters": [{
        "name": "subtrahend",
        "type": "java.math.BigDecimal"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "subtract",
      "parameters": [
        {
          "name": "subtrahend",
          "type": "java.math.BigDecimal"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "multiply",
      "parameters": [{
        "name": "multiplicand",
        "type": "java.math.BigDecimal"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "multiply",
      "parameters": [
        {
          "name": "multiplicand",
          "type": "java.math.BigDecimal"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "divide",
      "parameters": [
        {
          "name": "divisor",
          "type": "java.math.BigDecimal"
        },
        {
          "name": "scale",
          "type": "int"
        },
        {
          "name": "roundingMode",
          "type": "int"
        }
      ],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "divide",
      "parameters": [
        {
          "name": "divisor",
          "type": "java.math.BigDecimal"
        },
        {
          "name": "scale",
          "type": "int"
        },
        {
          "name": "roundingMode",
          "type": "java.math.RoundingMode"
        }
      ],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "divide",
      "parameters": [
        {
          "name": "divisor",
          "type": "java.math.BigDecimal"
        },
        {
          "name": "roundingMode",
          "type": "int"
        }
      ],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "divide",
      "parameters": [
        {
          "name": "divisor",
          "type": "java.math.BigDecimal"
        },
        {
          "name": "roundingMode",
          "type": "java.math.RoundingMode"
        }
      ],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "divide",
      "parameters": [{
        "name": "divisor",
        "type": "java.math.BigDecimal"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "divide",
      "parameters": [
        {
          "name": "divisor",
          "type": "java.math.BigDecimal"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "divideToIntegralValue",
      "parameters": [{
        "name": "divisor",
        "type": "java.math.BigDecimal"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "divideToIntegralValue",
      "parameters": [
        {
          "name": "divisor",
          "type": "java.math.BigDecimal"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "remainder",
      "parameters": [{
        "name": "divisor",
        "type": "java.math.BigDecimal"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "remainder",
      "parameters": [
        {
          "name": "divisor",
          "type": "java.math.BigDecimal"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "divideAndRemainder",
      "parameters": [{
        "name": "divisor",
        "type": "java.math.BigDecimal"
      }],
      "return": "java.math.BigDecimal[]"
    },
    {
      "name": "divideAndRemainder",
      "parameters": [
        {
          "name": "divisor",
          "type": "java.math.BigDecimal"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ],
      "return": "java.math.BigDecimal[]"
    },
    {
      "name": "sqrt",
      "parameters": [{
        "name": "mc",
        "type": "java.math.MathContext"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "pow",
      "parameters": [{
        "name": "n",
        "type": "int"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "pow",
      "parameters": [
        {
          "name": "n",
          "type": "int"
        },
        {
          "name": "mc",
          "type": "java.math.MathContext"
        }
      ],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "abs",
      "return": "java.math.BigDecimal"
    },
    {
      "name": "abs",
      "parameters": [{
        "name": "mc",
        "type": "java.math.MathContext"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "negate",
      "return": "java.math.BigDecimal"
    },
    {
      "name": "negate",
      "parameters": [{
        "name": "mc",
        "type": "java.math.MathContext"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "plus",
      "return": "java.math.BigDecimal"
    },
    {
      "name": "plus",
      "parameters": [{
        "name": "mc",
        "type": "java.math.MathContext"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "signum",
      "return": "int"
    },
    {
      "name": "scale",
      "return": "int"
    },
    {
      "name": "precision",
      "return": "int"
    },
    {
      "name": "unscaledValue",
      "return": "java.math.BigInteger"
    },
    {
      "name": "round",
      "parameters": [{
        "name": "mc",
        "type": "java.math.MathContext"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "setScale",
      "parameters": [
        {
          "name": "newScale",
          "type": "int"
        },
        {
          "name": "roundingMode",
          "type": "java.math.RoundingMode"
        }
      ],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "setScale",
      "parameters": [
        {
          "name": "newScale",
          "type": "int"
        },
        {
          "name": "roundingMode",
          "type": "int"
        }
      ],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "setScale",
      "parameters": [{
        "name": "newScale",
        "type": "int"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "movePointLeft",
      "parameters": [{
        "name": "n",
        "type": "int"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "movePointRight",
      "parameters": [{
        "name": "n",
        "type": "int"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "scaleByPowerOfTen",
      "parameters": [{
        "name": "n",
        "type": "int"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "stripTrailingZeros",
      "return": "java.math.BigDecimal"
    },
    {
      "name": "compareTo",
      "parameters": [{
        "name": "val",
        "type": "java.math.BigDecimal"
      }],
      "return": "int"
    },
    {
      "name": "equals",
      "parameters": [{
        "name": "x",
        "type": "java.lang.Object"
      }],
      "return": "boolean"
    },
    {
      "name": "min",
      "parameters": [{
        "name": "val",
        "type": "java.math.BigDecimal"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "max",
      "parameters": [{
        "name": "val",
        "type": "java.math.BigDecimal"
      }],
      "return": "java.math.BigDecimal"
    },
    {
      "name": "hashCode",
      "return": "int"
    },
    {
      "name": "toString",
      "return": "java.lang.String"
    },
    {
      "name": "toEngineeringString",
      "return": "java.lang.String"
    },
    {
      "name": "toPlainString",
      "return": "java.lang.String"
    },
    {
      "name": "toBigInteger",
      "return": "java.math.BigInteger"
    },
    {
      "name": "toBigIntegerExact",
      "return": "java.math.BigInteger"
    },
    {
      "name": "longValue",
      "return": "long"
    },
    {
      "name": "longValueExact",
      "return": "long"
    },
    {
      "name": "intValue",
      "return": "int"
    },
    {
      "name": "intValueExact",
      "return": "int"
    },
    {
      "name": "shortValueExact",
      "return": "short"
    },
    {
      "name": "byteValueExact",
      "return": "byte"
    },
    {
      "name": "floatValue",
      "return": "float"
    },
    {
      "name": "doubleValue",
      "return": "double"
    },
    {
      "name": "ulp",
      "return": "java.math.BigDecimal"
    }
  ],
  "name": "java.math.BigDecimal",
  "simple-name": "BigDecimal",
  "fields": [
    {
      "static": true,
      "name": "ZERO",
      "type": "java.math.BigDecimal"
    },
    {
      "static": true,
      "name": "ONE",
      "type": "java.math.BigDecimal"
    },
    {
      "static": true,
      "name": "TEN",
      "type": "java.math.BigDecimal"
    },
    {
      "static": true,
      "name": "ROUND_UP",
      "type": "int"
    },
    {
      "static": true,
      "name": "ROUND_DOWN",
      "type": "int"
    },
    {
      "static": true,
      "name": "ROUND_CEILING",
      "type": "int"
    },
    {
      "static": true,
      "name": "ROUND_FLOOR",
      "type": "int"
    },
    {
      "static": true,
      "name": "ROUND_HALF_UP",
      "type": "int"
    },
    {
      "static": true,
      "name": "ROUND_HALF_DOWN",
      "type": "int"
    },
    {
      "static": true,
      "name": "ROUND_HALF_EVEN",
      "type": "int"
    },
    {
      "static": true,
      "name": "ROUND_UNNECESSARY",
      "type": "int"
    }
  ]
}