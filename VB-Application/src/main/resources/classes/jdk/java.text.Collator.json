{
  "package": "java.text",
  "methods": [
    {
      "name": "getClass",
      "return": "java.lang.Class"
    },
    {
      "name": "toString",
      "return": "java.lang.String"
    },
    {"name": "notify"},
    {"name": "notifyAll"},
    {"name": "wait"},
    {
      "name": "wait",
      "parameters": [{
        "name": "timeoutMillis",
        "type": "long"
      }]
    },
    {
      "name": "wait",
      "parameters": [
        {
          "name": "timeoutMillis",
          "type": "long"
        },
        {
          "name": "nanos",
          "type": "int"
        }
      ]
    },
    {
      "name": "reversed",
      "return": "java.util.Comparator"
    },
    {
      "name": "thenComparing",
      "parameters": [{
        "name": "other",
        "type": "java.util.Comparator"
      }],
      "return": "java.util.Comparator"
    },
    {
      "name": "thenComparing",
      "parameters": [
        {
          "name": "keyExtractor",
          "type": "java.util.function.Function"
        },
        {
          "name": "keyComparator",
          "type": "java.util.Comparator"
        }
      ],
      "return": "java.util.Comparator"
    },
    {
      "name": "thenComparing",
      "parameters": [{
        "name": "keyExtractor",
        "type": "java.util.function.Function"
      }],
      "return": "java.util.Comparator"
    },
    {
      "name": "thenComparingInt",
      "parameters": [{
        "name": "keyExtractor",
        "type": "java.util.function.ToIntFunction"
      }],
      "return": "java.util.Comparator"
    },
    {
      "name": "thenComparingLong",
      "parameters": [{
        "name": "keyExtractor",
        "type": "java.util.function.ToLongFunction"
      }],
      "return": "java.util.Comparator"
    },
    {
      "name": "thenComparingDouble",
      "parameters": [{
        "name": "keyExtractor",
        "type": "java.util.function.ToDoubleFunction"
      }],
      "return": "java.util.Comparator"
    },
    {
      "static": true,
      "name": "getInstance",
      "return": "java.text.Collator"
    },
    {
      "static": true,
      "name": "getInstance",
      "parameters": [{
        "name": "desiredLocale",
        "type": "java.util.Locale"
      }],
      "return": "java.text.Collator"
    },
    {
      "name": "compare",
      "parameters": [
        {
          "name": "source",
          "type": "java.lang.String"
        },
        {
          "name": "target",
          "type": "java.lang.String"
        }
      ],
      "return": "int"
    },
    {
      "name": "compare",
      "parameters": [
        {
          "name": "o1",
          "type": "java.lang.Object"
        },
        {
          "name": "o2",
          "type": "java.lang.Object"
        }
      ],
      "return": "int"
    },
    {
      "name": "getCollationKey",
      "parameters": [{
        "name": "source",
        "type": "java.lang.String"
      }],
      "return": "java.text.CollationKey"
    },
    {
      "name": "equals",
      "parameters": [
        {
          "name": "source",
          "type": "java.lang.String"
        },
        {
          "name": "target",
          "type": "java.lang.String"
        }
      ],
      "return": "boolean"
    },
    {
      "name": "getStrength",
      "return": "int"
    },
    {
      "name": "setStrength",
      "parameters": [{
        "name": "newStrength",
        "type": "int"
      }]
    },
    {
      "name": "getDecomposition",
      "return": "int"
    },
    {
      "name": "setDecomposition",
      "parameters": [{
        "name": "decompositionMode",
        "type": "int"
      }]
    },
    {
      "static": true,
      "name": "getAvailableLocales",
      "return": "java.util.Locale[]"
    },
    {
      "name": "clone",
      "return": "java.lang.Object"
    },
    {
      "name": "equals",
      "parameters": [{
        "name": "that",
        "type": "java.lang.Object"
      }],
      "return": "boolean"
    },
    {
      "name": "hashCode",
      "return": "int"
    }
  ],
  "name": "java.text.Collator",
  "simple-name": "Collator",
  "fields": [
    {
      "static": true,
      "name": "PRIMARY",
      "type": "int"
    },
    {
      "static": true,
      "name": "SECONDARY",
      "type": "int"
    },
    {
      "static": true,
      "name": "TERTIARY",
      "type": "int"
    },
    {
      "static": true,
      "name": "IDENTICAL",
      "type": "int"
    },
    {
      "static": true,
      "name": "NO_DECOMPOSITION",
      "type": "int"
    },
    {
      "static": true,
      "name": "CANONICAL_DECOMPOSITION",
      "type": "int"
    },
    {
      "static": true,
      "name": "FULL_DECOMPOSITION",
      "type": "int"
    }
  ]
}