{
  "constructors": [
    {"name": "<init>"},
    {
      "name": "<init>",
      "parameters": [{
        "name": "parallelism",
        "type": "int"
      }]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "parallelism",
          "type": "int"
        },
        {
          "name": "factory",
          "type": "java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory"
        },
        {
          "name": "handler",
          "type": "java.lang.Thread.UncaughtExceptionHandler"
        },
        {
          "name": "asyncMode",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "<init>",
      "parameters": [
        {
          "name": "parallelism",
          "type": "int"
        },
        {
          "name": "factory",
          "type": "java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory"
        },
        {
          "name": "handler",
          "type": "java.lang.Thread.UncaughtExceptionHandler"
        },
        {
          "name": "asyncMode",
          "type": "boolean"
        },
        {
          "name": "corePoolSize",
          "type": "int"
        },
        {
          "name": "maximumPoolSize",
          "type": "int"
        },
        {
          "name": "minimumRunnable",
          "type": "int"
        },
        {
          "name": "saturate",
          "type": "java.util.function.Predicate"
        },
        {
          "name": "keepAliveTime",
          "type": "long"
        },
        {
          "name": "unit",
          "type": "java.util.concurrent.TimeUnit"
        }
      ]
    }
  ],
  "package": "java.util.concurrent",
  "methods": [
    {
      "name": "getClass",
      "return": "java.lang.Class"
    },
    {
      "name": "hashCode",
      "return": "int"
    },
    {
      "name": "equals",
      "parameters": [{
        "name": "obj",
        "type": "java.lang.Object"
      }],
      "return": "boolean"
    },
    {"name": "notify"},
    {"name": "notifyAll"},
    {"name": "wait"},
    {
      "name": "wait",
      "parameters": [{
        "name": "timeoutMillis",
        "type": "long"
      }]
    },
    {
      "name": "wait",
      "parameters": [
        {
          "name": "timeoutMillis",
          "type": "long"
        },
        {
          "name": "nanos",
          "type": "int"
        }
      ]
    },
    {
      "static": true,
      "name": "commonPool",
      "return": "java.util.concurrent.ForkJoinPool"
    },
    {
      "name": "invoke",
      "parameters": [{
        "name": "task",
        "type": "java.util.concurrent.ForkJoinTask"
      }],
      "return": "java.lang.Object"
    },
    {
      "name": "execute",
      "parameters": [{
        "name": "task",
        "type": "java.util.concurrent.ForkJoinTask"
      }]
    },
    {
      "name": "execute",
      "parameters": [{
        "name": "task",
        "type": "java.lang.Runnable"
      }]
    },
    {
      "name": "submit",
      "parameters": [{
        "name": "task",
        "type": "java.util.concurrent.ForkJoinTask"
      }],
      "return": "java.util.concurrent.ForkJoinTask"
    },
    {
      "name": "submit",
      "parameters": [{
        "name": "task",
        "type": "java.util.concurrent.Callable"
      }],
      "return": "java.util.concurrent.ForkJoinTask"
    },
    {
      "name": "submit",
      "parameters": [
        {
          "name": "task",
          "type": "java.lang.Runnable"
        },
        {
          "name": "result",
          "type": "java.lang.Object"
        }
      ],
      "return": "java.util.concurrent.ForkJoinTask"
    },
    {
      "name": "submit",
      "parameters": [{
        "name": "task",
        "type": "java.lang.Runnable"
      }],
      "return": "java.util.concurrent.ForkJoinTask"
    },
    {
      "name": "invokeAll",
      "parameters": [{
        "name": "tasks",
        "type": "java.util.Collection"
      }],
      "return": "java.util.List"
    },
    {
      "name": "invokeAll",
      "parameters": [
        {
          "name": "tasks",
          "type": "java.util.Collection"
        },
        {
          "name": "timeout",
          "type": "long"
        },
        {
          "name": "unit",
          "type": "java.util.concurrent.TimeUnit"
        }
      ],
      "return": "java.util.List"
    },
    {
      "name": "invokeAny",
      "parameters": [{
        "name": "tasks",
        "type": "java.util.Collection"
      }],
      "return": "java.lang.Object"
    },
    {
      "name": "invokeAny",
      "parameters": [
        {
          "name": "tasks",
          "type": "java.util.Collection"
        },
        {
          "name": "timeout",
          "type": "long"
        },
        {
          "name": "unit",
          "type": "java.util.concurrent.TimeUnit"
        }
      ],
      "return": "java.lang.Object"
    },
    {
      "name": "getFactory",
      "return": "java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory"
    },
    {
      "name": "getUncaughtExceptionHandler",
      "return": "java.lang.Thread.UncaughtExceptionHandler"
    },
    {
      "name": "getParallelism",
      "return": "int"
    },
    {
      "static": true,
      "name": "getCommonPoolParallelism",
      "return": "int"
    },
    {
      "name": "getPoolSize",
      "return": "int"
    },
    {
      "name": "getAsyncMode",
      "return": "boolean"
    },
    {
      "name": "getRunningThreadCount",
      "return": "int"
    },
    {
      "name": "getActiveThreadCount",
      "return": "int"
    },
    {
      "name": "isQuiescent",
      "return": "boolean"
    },
    {
      "name": "getStealCount",
      "return": "long"
    },
    {
      "name": "getQueuedTaskCount",
      "return": "long"
    },
    {
      "name": "getQueuedSubmissionCount",
      "return": "int"
    },
    {
      "name": "hasQueuedSubmissions",
      "return": "boolean"
    },
    {
      "name": "toString",
      "return": "java.lang.String"
    },
    {"name": "shutdown"},
    {
      "name": "shutdownNow",
      "return": "java.util.List"
    },
    {
      "name": "isTerminated",
      "return": "boolean"
    },
    {
      "name": "isTerminating",
      "return": "boolean"
    },
    {
      "name": "isShutdown",
      "return": "boolean"
    },
    {
      "name": "awaitTermination",
      "parameters": [
        {
          "name": "timeout",
          "type": "long"
        },
        {
          "name": "unit",
          "type": "java.util.concurrent.TimeUnit"
        }
      ],
      "return": "boolean"
    },
    {
      "name": "awaitQuiescence",
      "parameters": [
        {
          "name": "timeout",
          "type": "long"
        },
        {
          "name": "unit",
          "type": "java.util.concurrent.TimeUnit"
        }
      ],
      "return": "boolean"
    },
    {
      "static": true,
      "name": "managedBlock",
      "parameters": [{
        "name": "blocker",
        "type": "java.util.concurrent.ForkJoinPool.ManagedBlocker"
      }]
    }
  ],
  "name": "java.util.concurrent.ForkJoinPool",
  "simple-name": "ForkJoinPool",
  "fields": [{
    "static": true,
    "name": "defaultForkJoinWorkerThreadFactory",
    "type": "java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory"
  }]
}